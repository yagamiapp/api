//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Global {
  id Int [pk, increment]
  ties Int [not null, default: 0]
}

Table OsuBadge {
  id Int [pk, increment]
  awarded_at DateTime [not null]
  description String [not null]
  image_url String [not null]
  url String [not null]
  users_with_badge UserWithOsuBadge [not null]
}

Table UserWithOsuBadge {
  user_id Int [not null]
  badge_id Int [not null]
  user User [not null]
  badge OsuBadge [not null]

  indexes {
    (user_id, badge_id) [pk]
  }
}

Table CustomBadge {
  id Int [pk, increment]
  awarded_at DateTime [not null]
  name String [not null]
  description String [not null]
  image_url String [not null]
  url String [not null]
  users_with_badge UserWithCustomBadge [not null]
}

Table UserWithCustomBadge {
  user_id Int [not null]
  badge_id Int [not null]
  user User [not null]
  badge CustomBadge [not null]

  indexes {
    (user_id, badge_id) [pk]
  }
}

Table UsersHostingTournament {
  user_id Int [not null]
  tournament_id Int [not null]
  user User [not null]
  tournament Tournament [not null]

  indexes {
    (user_id, tournament_id) [pk]
  }
}

Table User {
  id Int [pk]
  username String [not null]
  country_code String [not null]
  country_name String [not null]
  cover_url String [not null]
  ranked_score BigInt [not null]
  play_count Int [not null]
  total_score BigInt [not null]
  pp_rank Int [not null]
  level Int [not null]
  level_progress Int [not null]
  hit_accuracy Float [not null]
  pp Float [not null]
  osu_token OsuOauth
  discord_accounts DiscordAccount [not null]
  twitch_accounts TwitchAccount [not null]
  in_teams UserInTeam [not null]
  ahr_owner_of AutoHostRotate
  osu_badges UserWithOsuBadge [not null]
  badges UserWithCustomBadge [not null]
  host_of UsersHostingTournament [not null]
  sessions UserSession [not null]
  invites TeamInvite [not null]
}

Table DiscordAccount {
  user User [not null]
  osu_id Int [not null]
  id String [pk]
  avatar String [not null]
  discriminator String [not null]
  flags Int [not null]
  username String [not null]
  token DiscordOauth
}

Table TwitchAccount {
  user User [not null]
  osu_id Int [not null]
  id Int [pk]
  username String [not null]
  requests_enabled Boolean [not null, default: false]
  req_require_live Boolean [not null, default: false]
  req_require_category Boolean [not null, default: false]
  tournaments Tournament [not null]
  token TwitchOauth
}

Table OsuOauth {
  user_id Int [pk]
  last_update DateTime [default: `now()`, not null]
  access_token String [not null]
  expires_in Int [not null]
  refresh_token String [not null]
  token_type String [not null]
  user User [not null]
}

Table DiscordOauth {
  user_id String [pk]
  last_update DateTime [default: `now()`, not null]
  access_token String [not null]
  expires_in Int [not null]
  refresh_token String [not null]
  token_type String [not null]
  scope String [not null]
  user DiscordAccount [not null]
}

Table TwitchOauth {
  user_id Int [pk]
  last_update DateTime [default: `now()`, not null]
  access_token String [not null]
  expires_at BigInt [not null]
  refresh_token String [not null]
  token_type String [not null]
  user TwitchAccount [not null]
}

Table UserSession {
  id String [pk]
  user User [not null]
  osu_id Int [not null]
  created_at DateTime [default: `now()`, not null]
  last_used DateTime [default: `now()`, not null]
  device String
  browser String
  os String
}

Table Guild {
  guild_id String [pk]
  change_nickname Boolean [not null]
  linked_role String
  player_role String
  match_results_channel String
  manager_admin_disabled Boolean [not null, default: false]
  tournaments Tournament [not null]
  active_tournament Int
}

Table Tournament {
  id Int [pk, increment]
  acronym String [not null]
  name String [not null]
  color String [not null]
  banner_url String [not null]
  description String [not null]
  force_nf Boolean [not null]
  icon_url String [not null]
  score_mode Int [not null]
  team_mode Int [not null]
  team_size Int [not null]
  x_v_x_mode Int [not null]
  allow_registrations Boolean [not null]
  rounds Round [not null]
  guild Guild
  guild_id String
  delete_warning Boolean
  fm_mods Int [not null, default: 1]
  double_pick Int [not null, default: 1]
  double_ban Int [not null, default: 1]
  private Boolean [not null, default: false]
  teams Team [not null]
  twitch_account_id Int
  twitch_channel TwitchAccount
  mod_multipliers ModMultiplier [not null]
  hosts UsersHostingTournament [not null]
}

Table ModMultiplier {
  id Int [pk, increment]
  tournament Tournament [not null]
  tournament_id Int [not null]
  mod_string String [not null]
  match_exactly Boolean [not null, default: false]
  multiplier Float [not null]
}

Table Round {
  id Int [pk, increment]
  acronym String [not null]
  name String [not null]
  bans Int [not null]
  best_of Int [not null]
  delete_warning String
  matches Match [not null]
  tournament Tournament [not null]
  tournament_id Int [not null]
  mappool_in_rounds MappoolInRound [not null]
  mappools Mappool [not null]
}

Table MappoolInRound {
  round Round [not null]
  round_id Int [not null]
  mappool Mappool [not null]
  mappool_id Int [not null]

  indexes {
    (round_id, mappool_id) [pk]
  }
}

Table Mappool {
  id Int [pk, increment]
  name String [not null]
  description String
  map_in_pools MapInPool [not null]
  maps Map [not null]
  global Boolean [not null, default: false]
  public Boolean [not null, default: false]
  qualifier QualifierRound
  mappools_in_rounds MappoolInRound [not null]
  rounds Round [not null]
}

Table TeamInvite {
  invitee_user_id Int [not null]
  invitee User [not null]
  team_id Int [not null]
  team Team [not null]

  indexes {
    (invitee_user_id, team_id) [pk]
  }
}

Table MapInPool {
  identifier String [not null]
  mods String [not null]
  data Map
  map_id Int
  mod_priority Int [not null, default: 0]
  mappool Mappool [not null]
  mappool_id Int [not null]
  in_matches MapInMatch [not null]

  indexes {
    (identifier, mappool_id) [pk]
  }
}

Table Map {
  id Int [pk]
  beatmapset_id Int [not null]
  star_rating Float [not null]
  status String [not null]
  total_length Int [not null]
  diff_mapper_user_id Int [not null]
  difficulty_name String [not null]
  max_combo Int [not null]
  aim_difficulty Float [not null]
  approach_rate Float [not null]
  flashlight_difficulty Float [not null]
  overall_difficulty Float [not null]
  slider_factor Float [not null]
  speed_difficulty Float [not null]
  bpm Float [not null]
  count_circles Int [not null]
  count_sliders Int [not null]
  count_spinners Int [not null]
  circle_size Float [not null]
  hp_drain Float [not null]
  hit_length Int [not null]
  last_updated DateTime [not null]
  url String [not null]
  artist String [not null]
  artist_unicode String [not null]
  cover_url String [not null]
  cover_2x_url String [not null]
  card_url String [not null]
  card_2x_url String [not null]
  list_url String [not null]
  list_2x_url String [not null]
  slim_cover_url String [not null]
  slim_cover_2x_url String [not null]
  preview_url String [not null]
  title String [not null]
  title_unicode String [not null]
  set_mapper_user_id Int [not null]
  available Boolean [not null]
  fetch_time DateTime [default: `now()`, not null]
  in_pools MapInPool [not null]
  mappools Mappool [not null]
}

Table Team {
  id Int [pk, increment]
  name String [not null]
  icon_url String [not null]
  color String [not null]
  members UserInTeam [not null]
  tournament Tournament [not null]
  tournament_id Int [not null]
  scrim Boolean [not null, default: false]
  in_matches TeamInMatch [not null]
  in_qualifier_matches TeamInQualifierMatch [not null]
  invited_users TeamInvite [not null]
}

Table UserInTeam {
  osu_id Int [not null]
  user User [not null]
  team Team [not null]
  team_id Int [not null]
  member_order Int [not null, default: 0]
  delete_warning Boolean

  indexes {
    (osu_id, team_id) [pk]
  }
}

Table Match {
  id Int [pk, increment]
  teams TeamInMatch [not null]
  start_time DateTime
  message_id String
  channel_id String
  mp_link String
  waiting_on Int
  round Round
  round_id Int
  settings ScrimSettings
  map_history MapInMatch [not null]
  state Int [not null]
  scrim Boolean [not null, default: false]
}

Table ScrimSettings {
  match_id Int [pk]
  match Match [not null]
  bans Int [not null]
  best_of Int [not null]
}

Table TeamInMatch {
  match_id Int [not null]
  team_id Int [not null]
  match Match [not null]
  team Team [not null]
  score Int [not null]
  roll Int
  pick_order Int
  ban_order Int
  aborts Int [not null, default: 0]
  faults Int [not null, default: 0]
  warmed_up Boolean [not null, default: false]
  bans MapInMatch [not null]
  wins MapInMatch [not null]
  picks MapInMatch [not null]
  winner Boolean

  indexes {
    (team_id, match_id) [pk]
  }
}

Table MapInMatch {
  map MapInPool [not null]
  match Match [not null]
  match_id Int [not null]
  map_identifier String [not null]
  pool_id Int [not null]
  banned_by TeamInMatch
  banned_by_id Int
  picked_by TeamInMatch
  picked_by_id Int
  pick_number Int
  pick_team_number Int
  won_by TeamInMatch
  won_by_id Int

  indexes {
    (map_identifier, match_id) [pk]
  }
}

Table QualifierRound {
  id Int [pk, increment]
  mappool Mappool [not null]
  mappool_id Int [unique, not null]
}

Table QualifierMatch {
  id Int [pk, increment]
  teams TeamInQualifierMatch [not null]
  map_index Int [not null, default: 0]
}

Table TeamInQualifierMatch {
  team Team [not null]
  team_id Int [not null]
  match QualifierMatch [not null]
  match_id Int [not null]

  indexes {
    (team_id, match_id) [pk]
  }
}

Table AutoHostRotate {
  owner User [not null]
  osu_id Int [pk]
  mp_link String [not null]
  min_stars Float
  max_stars Float
  min_length Int
  max_length Int
  min_rank Int
  max_rank Int
  player_order AutoHostRotatePlayer [not null]
  current_host AutoHostRotatePlayer
  current_host_id Int [unique]
}

Table AutoHostRotatePlayer {
  id Int [pk]
  username String [not null]
  rank Int [not null]
  lobby_id Int [not null]
  in_lobby AutoHostRotate [not null]
  host_in AutoHostRotate
}

Ref: UserWithOsuBadge.user_id > User.id

Ref: UserWithOsuBadge.badge_id > OsuBadge.id

Ref: UserWithCustomBadge.user_id > User.id

Ref: UserWithCustomBadge.badge_id > CustomBadge.id

Ref: UsersHostingTournament.user_id > User.id [delete: Cascade]

Ref: UsersHostingTournament.tournament_id > Tournament.id [delete: Cascade]

Ref: DiscordAccount.osu_id > User.id

Ref: TwitchAccount.osu_id > User.id

Ref: OsuOauth.user_id - User.id

Ref: DiscordOauth.user_id - DiscordAccount.id

Ref: TwitchOauth.user_id - TwitchAccount.id

Ref: UserSession.osu_id > User.id

Ref: Tournament.guild_id > Guild.guild_id

Ref: Tournament.twitch_account_id > TwitchAccount.id

Ref: ModMultiplier.tournament_id > Tournament.id

Ref: Round.tournament_id > Tournament.id [delete: Cascade]

Ref: MappoolInRound.round_id > Round.id [delete: Cascade]

Ref: MappoolInRound.mappool_id > Mappool.id [delete: Cascade]

Ref: TeamInvite.invitee_user_id > User.id

Ref: TeamInvite.team_id > Team.id [delete: Cascade]

Ref: MapInPool.map_id > Map.id

Ref: MapInPool.mappool_id > Mappool.id [delete: Cascade]

Ref: Team.tournament_id > Tournament.id [delete: Cascade]

Ref: UserInTeam.osu_id > User.id

Ref: UserInTeam.team_id > Team.id [delete: Cascade]

Ref: Match.round_id > Round.id

Ref: ScrimSettings.match_id - Match.id

Ref: TeamInMatch.match_id > Match.id [delete: Cascade]

Ref: TeamInMatch.team_id > Team.id [delete: Cascade]

Ref: MapInMatch.(map_identifier, pool_id) > MapInPool.(identifier, mappool_id) [delete: Cascade]

Ref: MapInMatch.match_id > Match.id [delete: Cascade]

Ref: MapInMatch.(match_id, banned_by_id) > TeamInMatch.(match_id, team_id)

Ref: MapInMatch.(match_id, picked_by_id) > TeamInMatch.(match_id, team_id)

Ref: MapInMatch.(match_id, won_by_id) > TeamInMatch.(match_id, team_id)

Ref: QualifierRound.mappool_id - Mappool.id

Ref: TeamInQualifierMatch.team_id > Team.id

Ref: TeamInQualifierMatch.match_id > QualifierMatch.id

Ref: AutoHostRotate.osu_id - User.id

Ref: AutoHostRotate.current_host_id - AutoHostRotatePlayer.id

Ref: AutoHostRotatePlayer.lobby_id > AutoHostRotate.osu_id [delete: Cascade]